1、hibernate中使用C3P0数据源：
	1)、导入c3p0.jar：
		将hibernate压缩包下的\lib\optional\c3p0\*.jar
		
	2)、加入配置：
		c3p0.max_size: 数据库连接池数量的最大连接数
		c3p0.min_size: 数据库连接池数量的最小连接数
		c3p0.acquire_increment: 当连接池中的连接耗尽时，同一时刻获取多少个数据库连接
		c3p0.timeout: 数据库连接池中连接对象在多长时间内没有使用过后，就应该被销毁
		c3p0.idle_test_period: 表示连接池检测线程多长时间检测一次池内的所有链接对象是否超时，连接池本身不会把自己从连接池中移除，而是专门有一个线程按照一定的时间间隔来做这件事，这个线程通过比较连接对象的最后一次被使用和当前时间差来和timeout做比对，进而判断是否销毁这个连接对象.
		c3p0.max_statements: 缓存Statement对象的数量
		
		以下两个对Oracle有效，而对Mysql无效
		jdbc.fetch_size: 设定jdbc的statement读取数据的时候每次从数据库中取出的记录数，根据测试，当fetchSize=100的时候最佳。
		jdbc.batch_size: 设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小，类似于设置缓冲区大小的意思。根据测试，当batchSize=30的时候最佳
		
2、映射Java的时间和日期类型
	1)、基本知识：
		i、在Java中，代表时间和日期的类型包括java.util.Date和java.util.Calendar。
			此外，在JDBC API中还提供了java.util.Date的3个子类：java.sql.Date，java.sql.Time和java.sql.Timestamp
		ii、在标准sql中，DATE类型代表日期，TIME类型代表时间，TIMESTAMP类型代表时间戳，同时包括时间和日期
		
	2)、如何进行映射日期和时间？
		因为java.util.Date是java.sql.Date，java.sql.Time和java.sql.Timestamp的父类，所以建议在持久化类的Date类型设置为java.util.Date
		而在实体映射文件中将类型type设置为hibernate对应的时间或者日期类型。
		<property name="publishDate" type="date">
            <column name="PUBLISHDATE" />
        </property>
         <property name="publishDate" type="time">
            <column name="PUBLISHDATE" />
        </property>
         <property name="publishDate" type="timestamp">
            <column name="PUBLISHDATE" />
        </property>