注意：
	注解可以写在属性上，也可以写在getter上。但是需要注意的是，注解要么全部写属性上，要么全部写getter上，不能混合使用

Table:
	对应数据库中的数据表，name为表名，catalog默认为空(一般不设)，schema表示使用的数据库名字
	
Entity:
	表示该类为一个实体类，对应数据库中的一张表，name属性表示数据库中对应表的名字
	
Embeddable:
	表示是一个嵌入类，该类的对象在另外一个实体类中充当属性(非主键)
	
Embedded:
	用于注解@Embeddable实体类充当的属性时，必须配合@Embeddable注解
	
EmbeddedId:
	使用注解@Embeddable的实体类充当另一个实体类的主键时(即复合主键)，需要在属性或者getter上加入该注解
		
Id:
	表示实体类中对应的主键。一般配合@GeneratedValue使用	
	
Column:
	表示数据库中的列名，
		length:属性的大小
		name:数据库中字段的名称，默认跟属性名称一致
		nullable:表示字段是否允许为null，默认为true
		unique:表示字段是否是唯一标识，默认为false
		insertable:orm框架执行插入操作时，该字段是否应该出现在INSERT语句中，默认为true
		updateable:orm框架执行更新操作时，该字段是否应该出现在UPDATE语句中，默认为true
	
GeneratedValue(strategy=GenerationType.AUTO,generator=""):
	strategy表示主键生成策略，取值有：
		GenerationType.AUTO:根据底层数据库自动选取(默认),对于自动增长型必须为整型
		GenerationType.IDENTITY:根据数据库的identity字段生成
		GenerationType.SEQUENCE:使用sequence来决定主键的取值
		GenerationType.TABLE:使用指定表来决定主键取值，需要结合@TableGenerator使用
	generator:表示主键生成器名称，如果需要使用，则配合@GenericGenerator使用
		
GenericGenerator:
	主键生成器，属性有:
		name: 表示该生成器定义的名字，需要跟@GeneratedValue的generator属性名要保持一致，
		strategy:对于字符串作为主键的话，该值设为assigned，即手动赋值。
		
OneToOne:
	表示一对一外键关联
	
JoinColumn:
	属性:
		name: 表示被控方的主键名称，类型为String
		unique: 表示唯一性，类型为boolean	